#include "geometry_collision.h"
#include <iostream>


////////////////////////////////////////////////////////////////////////////////////////
// Start of DiskLeft
////////////////////////////////////////////////////////////////////////////////////////

DiskLeft::DiskLeft():radius(5), xCen(-5.3354), yCen(0) {}

bool DiskLeft::operator()(double x, double y, double z=0) const {
	return ((x-xCen)*(x-xCen)+(y-yCen)*(y-yCen)<radius*radius);
}

void DiskLeft::getBoundingBox(double& xmin, double& xmax, double& ymin, double& ymax, double& zmin, double& zmax) {
	xmin = xCen-radius;
	xmax = xCen+radius;
	ymin = yCen-radius;
	ymax = yCen+radius;
	zmin = 0;
	zmax = 0;
}

////////////////////////////////////////////////////////////////////////////////////////
// End of DiskLeft
////////////////////////////////////////////////////////////////////////////////////////









////////////////////////////////////////////////////////////////////////////////////////
// Start of DiskRight
////////////////////////////////////////////////////////////////////////////////////////

DiskRight::DiskRight():radius(5), xCen(5.2911), yCen(3) {}

bool DiskRight::operator()(double x, double y, double z=0) const {
	return ((x-xCen)*(x-xCen)+(y-yCen)*(y-yCen)<radius*radius);
}

void DiskRight::getBoundingBox(double& xmin, double& xmax, double& ymin, double& ymax, double& zmin, double& zmax) {
	xmin = xCen-radius;
	xmax = xCen+radius;
	ymin = yCen-radius;
	ymax = yCen+radius;
	zmin = 0;
	zmax = 0;
}

////////////////////////////////////////////////////////////////////////////////////////
// End of DiskRight
////////////////////////////////////////////////////////////////////////////////////////
